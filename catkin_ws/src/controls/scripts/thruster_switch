#! /usr/bin/env python2.7

import rospy
from std_msgs.msg import String
from geometry_msgs.msg import Wrench

modes = ['off', 'rc', 'controls']
mode = 'off'


def mode_callback(msg):
    global mode
    if msg.data in modes:
        mode = msg.data
    else:
        rospy.logerr('Invalid mode specified.')


def rc_callback(msg):
    if mode == 'rc':
        thruster_pub.publish(msg)


def controls_callback(msg):
    if mode == 'controls':
        thruster_pub.publish(msg)


if __name__ == '__main__':
    global controls_sub, rc_sub, thruster_pub, mode_srv
    controls_sub = rospy.Subscriber('/controls/wrench',
                                    Wrench, controls_callback)
    rc_callback = rospy.Subscriber('/rc/wrench',
                                   Wrench, rc_callback)
    thruster_pub = rospy.Publisher('/thrust_mapper/wrench',
                                   Wrench, queue_size=100)
    mode_srv = rospy.Service('thruster_mode', String, mode_callback)
    rospy.spin()
