#! /usr/bin/env python2.7
# -*- coding: utf-8 -*-
import smach
import rospy
import smach_ros
from threading import Thread
from smach.user_data import UserData
from planner.primitives import InitializationState, SetVelocityState
from std_msgs.msg import Bool
from planner import tasks

__author__ = 'Max Krogius'


def create_state_machine():
    sm = smach.StateMachine(
        outcomes=['succeeded', 'aborted', 'preempted'])
    with sm:
        sm.add(tasks.initialize(5, 5, 1))
        sm.add(tasks.lane_task())
   return sm


if __name__ == '__main__':
    rospy.init_node('lane_test')
    sm = create_state_machine()
    sis = smach_ros.IntrospectionServer('lane_test', sm, '/SM_ROOT')
    sis.start()

    # In order to get smach to respond to ctrl+c we run it in a different
    # thread and request a preempt on ctrl+c.
    smach_thread = Thread(target=lambda: sm.execute(userData))
    smach_thread.start()

    # It is necessary to use the on_shutdown method to request the preempt
    # rather than waiting until after rospy spin to do so. Otherwise, the
    # state machine will not respond to ctrl+c.
    rospy.on_shutdown(sm.request_preempt)
    rospy.spin()
    smach_thread.join()
    sis.stop()
