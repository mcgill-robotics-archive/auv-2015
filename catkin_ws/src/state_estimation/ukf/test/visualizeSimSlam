#!/usr/bin/env python2.7

import rospy
import rosgraph
from std_msgs.msg import ColorRGBA
from auv_msgs.msg import SlamTarget
from visualization_msgs.msg import Marker

red = ColorRGBA()
red.r = 1
red.a = 1
green = ColorRGBA()
green.g = 1
green.a = 1

def publishSphereMarker(name, color, msg):
  marker = Marker()
  marker.header.frame_id = "/robot"
  marker.ns = name
  marker.id = msg.ObjectID
  marker.type = marker.SPHERE
  marker.action = marker.ADD # (really this modifies it)
  marker.scale.x = 0.2
  marker.scale.y = 0.2
  marker.scale.z = 0.2
  marker.color = color
  marker.pose.orientation.w = 1.0
  marker.pose.position.x = msg.xPos
  marker.pose.position.y = msg.yPos
  viz_pub.publish(marker)

def actualPositionCallback(msg):
  publishSphereMarker("actual", green, msg)
  
def noisyPositionCallback(msg):
  publishSphereMarker("noisy", red, msg)

if __name__ == '__main__':
  global viz_pub
  rospy.init_node('visualizeSimSlam')
  viz_pub = rospy.Publisher('visualization_marker', Marker, queue_size=10)
  rospy.Subscriber('sim_slam/position/actual', SlamTarget, actualPositionCallback)
  rospy.Subscriber('sim_slam/position/noisy', SlamTarget, noisyPositionCallback)
  
  rospy.spin()
